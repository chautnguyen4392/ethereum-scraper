name: 'Docker deploy to GitHub'

on:
  push:
    branches:
      - dockerized

env:
  # GitHub settings
  REGISTRY: ghcr.io/liquality

  # AWS settings
  AWS_REGION: 'us-east-1'

  # ethereum-indexer-api
  ETH_API_IMAGE_NAME: 'ethereum-indexer-api'
  ETH_API_IMAGE_TAG: 'latest'
  ETH_API_DOCKERFILE_PATH: 'api.dockerfile'

  # ethereum-indexer-worker
  ETH_WORKER_IMAGE_NAME: 'ethereum-indexer-worker'
  ETH_WORKER_IMAGE_TAG: 'latest'
  ETH_WORKER_DOCKERFILE_PATH: 'worker.dockerfile'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build, tag, and push Docker image (eth api)
      - name: Build, tag, push image to GitHub (eth api)
        id: build-api-image
        run: |
          echo "Building and tagging Docker image ($ETH_API_IMAGE_NAME)"
          docker build -f $ETH_API_DOCKERFILE_PATH -t $ETH_API_IMAGE_NAME . --no-cache
          docker tag $ETH_API_IMAGE_NAME:$ETH_API_IMAGE_TAG $REGISTRY/$ETH_API_IMAGE_NAME:$ETH_API_IMAGE_TAG
          echo "Pushing image to registry as: $REGISTRY/$ETH_API_IMAGE_NAME"
          docker push $REGISTRY/$ETH_API_IMAGE_NAME:$ETH_API_IMAGE_TAG

      # Build, tag, and push Docker image (eth worker)
      - name: Build, tag, push image to GitHub (eth worker)
        id: build-worker-image
        run: |
          echo "Building and tagging Docker image ($ETH_WORKER_IMAGE_NAME)"
          docker build -f $ETH_WORKER_DOCKERFILE_PATH -t $ETH_WORKER_IMAGE_NAME . --no-cache
          docker tag $ETH_WORKER_IMAGE_NAME:$ETH_WORKER_IMAGE_TAG $REGISTRY/$ETH_WORKER_IMAGE_NAME:$ETH_WORKER_IMAGE_TAG
          echo "Pushing image to registry as: $REGISTRY/$ETH_WORKER_IMAGE_NAME"
          docker push $REGISTRY/$ETH_WORKER_IMAGE_NAME:$ETH_WORKER_IMAGE_TAG
